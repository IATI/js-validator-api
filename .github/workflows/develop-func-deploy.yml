name: Deploy_To_Dev_Function_On_Push

on:
  push:
    paths-ignore: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - '**/README.md' # don't run on README.md file updates anywhere in repo
      - '**/dependabot.yml'
    branches:
      - develop

env:
  NAME: func-iativalidator
  STAGE: dev # suffix to indicate environment stage
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '14.x'
  REDIS_HOSTNAME: ${{ secrets.DEV_REDIS_HOSTNAME }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_KEY: ${{ secrets.DEV_REDIS_KEY }}
  REDIS_CACHE_SEC: 86400
  API_KEY: ${{ secrets.DEV_API_KEY }}
  VALIDATOR_SERVICES_URL: ${{ secrets.DEV_VALIDATOR_SERVICES_URL }}
  VALIDATOR_SERVICES_KEY_NAME: ${{ secrets.VALIDATOR_SERVICES_KEY_NAME }}
  VALIDATOR_SERVICES_KEY_VALUE: ${{ secrets.DEV_VALIDATOR_SERVICES_KEY_VALUE }}

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: 'Setup Node ${{ env.NODE_VERSION }} Environment'
        uses: actions/setup-node@v2.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          npm run rules:test
          popd

      - name: 'Login via Azure CLI'
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }} # Service Principal credentials saved in GitHub Secrets

      - name: Set Env variables for connecting to Redis instance
        uses: Azure/appservice-settings@v1.1.1
        with:
          app-name: ${{env.NAME}}-${{env.STAGE}}
          app-settings-json: |
            [
                {
                    "name": "REDIS_HOSTNAME",
                    "value": "${{ env.REDIS_HOSTNAME }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_KEY",
                    "value": "${{ env.REDIS_KEY }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_PORT",
                    "value": "${{ env.REDIS_PORT }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_CACHE_SEC",
                    "value": "${{ env.REDIS_CACHE_SEC }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_URL",
                    "value": "${{ env.VALIDATOR_SERVICES_URL }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_KEY_NAME",
                    "value": "${{ env.VALIDATOR_SERVICES_KEY_NAME }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_KEY_VALUE",
                    "value": "${{ env.VALIDATOR_SERVICES_KEY_VALUE }}",
                    "slotSetting": false
                }
            ]

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1.4.0
        with:
          app-name: ${{ env.NAME }}-${{ env.STAGE }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          respect-funcignore: true

  integration-test:
    needs: build-test-deploy
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: 'Install newman'
        run: |
          npm i newman

      - name: 'Run integration tests'
        run: |
          newman run integration-tests/js-validator-api-tests.postman_collection.json -e integration-tests/envs/func-iativalidator-dev.postman_environment.json --working-dir integration-tests/test-files --env-var keyValue=$API_KEY
