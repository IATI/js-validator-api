{
	"info": {
		"_postman_id": "c2e4fc5b-1f70-46cd-b6fb-dec3e0379979",
		"name": "js-validator-api-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET /pub",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Reponse body contains 'Public API.'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Public API.\");",
							"});",
							"pm.test(\"Reponse body contains 'Verison'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Version\");",
							"});",
							"pm.test(\"Reponse body contains 'John'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"IATI\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/pub?name=IATI",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub"
					],
					"query": [
						{
							"key": "name",
							"value": "IATI"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /pvt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Reponse body contains 'Public API.'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Private API.\");",
							"});",
							"pm.test(\"Reponse body contains 'Verison'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Version\");",
							"});",
							"pm.test(\"Reponse body contains 'John'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"IATI\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/pvt?name=IATI",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pvt"
					],
					"query": [
						{
							"key": "name",
							"value": "IATI"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "iati-act-no-errors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-activities\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-activities');",
							"});",
							"pm.test(\"version is 2.03\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('2.03');",
							"});",
							"pm.test(\"file level errors are equal to []\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.file).to.eql([]);",
							"});",
							"pm.test(\"Activities identifier is equal to AA-AAA-123456789-ABC123 and contains identifier error 1.14.8\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.oneCase.ruleInfo.id))).to.include('1.14.8');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-act-no-errors.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "iati-org-no-errors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-organisations\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-organisations');",
							"});",
							"pm.test(\"version is 2.02\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('2.02');",
							"});",
							"pm.test(\"file level errors are equal to []\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.file).to.eql([]);",
							"});",
							"pm.test(\"Organisation identifier is equal to NP-SWC-1234 and contains no errors\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['NP-SWC-1234']).to.eql([]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-org-no-errors.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "iati-act-codelist-basic",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-activities\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-activities');",
							"});",
							"pm.test(\"version is 2.03\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('2.03');",
							"});",
							"pm.test(\"file level errors are equal to []\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.file).to.eql([]);",
							"});",
							"pm.test(\"There is a codelist error for OrganisationRole Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.codelist))).to.be.an('array').that.includes('OrganisationRole');",
							"});",
							"pm.test(\"There is a codelist error for BudgetType Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.codelist))).to.be.an('array').that.includes('BudgetType');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"followOriginalHttpMethod": false,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-act-codelist-basic.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "iati-org-codelist-basic",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-organisations\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-organisations');",
							"});",
							"pm.test(\"version is 2.02\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('2.02');",
							"});",
							"pm.test(\"file level errors are equal to []\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.file).to.eql([]);",
							"});",
							"pm.test(\"There is a codelist error for OrganisationType Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['NP-SWC-1234'].map(obj => (obj.codelist))).to.be.an('array').that.includes('OrganisationType');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"followOriginalHttpMethod": false,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-org-codelist-basic.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "iati-act-codelist-conditional",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-activities\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-activities');",
							"});",
							"pm.test(\"version is 2.03\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('2.03');",
							"});",
							"pm.test(\"file level errors are equal to []\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.file).to.eql([]);",
							"});",
							"pm.test(\"There is a codelist error for Region Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.codelist))).to.be.an('array').that.includes('Region');",
							"});",
							"pm.test(\"There is a codelist error for AidType Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.codelist))).to.be.an('array').that.includes('AidType');",
							"});",
							"pm.test(\"There is a codelist error for AidTypeVocabulary Codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => (obj.codelist))).to.be.an('array').that.includes('AidTypeVocabulary');",
							"});",
							"pm.test(\"There is a codelist error that references linked default codelist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['AA-AAA-123456789-ABC123'].map(obj => ({codelist: obj.codelist, errContext: obj.errContext}))).to.be.an('array').that.deep.includes({codelist: 'Region', errContext: \"\\\"ZZA123\\\" is not a valid value for attribute @code and linked @vocabulary=1\"});",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"followOriginalHttpMethod": false,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-act-codelist-conditional.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "0.6.1_iati-act-no-errors-old-version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-activities\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-activities');",
							"});",
							"pm.test(\"version is 1.03\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('1.03');",
							"});",
							"pm.test(\"There is a file level error with id '0.6.1'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['file'].map(obj => (obj.id))).to.be.an('array').that.includes('0.6.1');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"followOriginalHttpMethod": false,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-act-no-errors-old-version.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "0.6.1_iati-org-no-errors-old-version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"valid value is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.valid).to.eql(true);",
							"});",
							"pm.test(\"fileType value is iati-organisations\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.fileType).to.eql('iati-organisations');",
							"});",
							"pm.test(\"version is 1.03\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fileInfo.version).to.eql('1.03');",
							"});",
							"pm.test(\"There is a file level error with id '0.6.1'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors['file'].map(obj => (obj.id))).to.be.an('array').that.includes('0.6.1');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"followOriginalHttpMethod": false,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "iati-org-no-errors-old-version.xml"
					}
				},
				"url": {
					"raw": "{{baseURL}}/pub/validate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pub",
						"validate"
					]
				}
			},
			"response": []
		}
	]
}